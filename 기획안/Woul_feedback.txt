12/27(월)

문서 정리부터 주석까지 다 배운 걸 다 이용하기
Mental Model -> 구현 Model 
실존하는 것은 "문서" 라는 것을 잊지 않아야한다. 메뉴얼도 문서.

1/25(화)이 발표

1. 고민했던 부분, 필체 기억에 오래 남는다.
2. 실제 랭귀지를 개발하는 동안 최소 3개 이상 언어가 바뀔 가능성... 랭귀지를 전에 경험한 사람들은 이렇게 짜는 구나 하고 이미 만들어진 걸 그 버전으로 바꿔서 물어보면서 공부 가능 (경험이 있으면 기능을 바꾸면서 기능을 찾아쓴다.)
예제나 유즈케이스들이 많을수록 좋다. 유즈케이스가 많다는 것 = 그 안에서 발생하는 이슈들을 동시적으로 처리할 수 있다는 것
한 달 동안 죽었다 생각하고 해보기
예전엔 하는 지 모르는 지 하고 짰었는데 이번엔 하나하나 공부하면서 하자하고 생각해도 된다.
프로젝트 주제 선정... 우리가 특정한 도메인 전문가가 아니기 때문에 해당 고객의 도메인 모델을 알 수 없다. 그 고객의 도메인을 알게하는 방법론, 그걸로 도메인과 SRS모델을 뽑아낼 수 있으면 개발자는 다 할 수 있다.
피아노 건반이 다 다르지만 OOP의 관점에서는 다 똑같다.
원래 했던 프로젝트를 리비젼 해도 되고, 준비해온 게 있다면 그걸 진행해도 된다. 각 조에서 일어나는 이슈들, 팀 간의 의사소통, 문서정리까지 다 할 수 있고, 선생님과 계속 의사소통하면서 질문하고 얘기해야 한다. PT에서 주어진 시간이 있을 때 어떻게 발표하는지까지 배웠다. 

[3조]
Netflix and chill <- 라면 먹고 갈래? 유머스럽게 스타트...?
회화형 학습 프로그램, Manners maketh man
인간은 영상을 통해 메세지를 접할 때 기억에 오래 남는다. => 영상을 통한 회화형 앱
원래 있는 앱... 영상을 통해 단어를 얻는다고 했을 때 영상을 어떻게 마련하고, 단어는 어떻게 생성? => 영상에 대한 카피라이트 문제 해결. => 보이스든 자막이든 이 영상에 이런 단어가 나온다는 것을 어떻게 
뭔가를 분석했고 처리했다는 이 사람의 의도를 다 알고난 뒤에 하는 것
분석설명에서 아이디어를 설명하는 거x, 아이디어를 미리 설명하고 분석 설명(아이디어를 이렇게  
아이디어를 냈으면 이게 얼마나 괜찮은 아이디어이고, 이걸 냈을 때 얼마나 좋은 일이 일어날지를 처음에 설명해야 한다.
상황을 만들어 놓고, 여기서 해당하는 이미지를 많이 보여주고 텍스트를 보여주는 건 많다 => 텍스트가 못하는 걸 해야함. 텍스트는 지면이라는 물리적 제약이 존재. 디지털은 제약이x

비트와 보이스가 섞여서 어떻게 만드느냐? <- 생각못했다는 대답이 나오면 안된다. 이런 문제들이 키워드. 실제 프로젝트를 처리할 땐 이거부터 처리해야(하이리스크부터 만들어야 한다.)

영상을 보여주고, 이런 영상을 후에 단어로 옮기겠다는 현재 IT 추세는 x... 요새는 문장을 넣으면 해당하는 문장을 하는 유튜브 영상들을 동적으로 찾아서 보여주고, 자막까지 해준다... 내가 검색x 컨텐츠가 자동으로 제너레이션...
그런 점에서의 아이디어가 있는지를 얘기해야 한다.
문장을 분석하기 위한 엔진 - 불안요소 1. AI가 잘못된 데이터를 넘겨준다. 2. 데이터를 잘못 받은 강사님이 짜신 코드에서 파싱을 할 때 에러 발생 가능.
사람들이 보면 찾아낼 수 있지만, 엔진은 해석을 못해서 에러... 이런 상황에서 그대로 도출되면 잘못된 정보를 모르는 사람들은 맞는 줄 안다. => 사람들이 개입해서 실제로 고쳐야한다. 아는 사람들이 고칠 수 있도록 편집기를 생성
한쪽은 데이터를 AI가 개입해서 만들고, 한쪽은 사람들이 개입해서 고친다 => 굳
But, 사람들이 쳐서 유튜브를 보는 건 이전 세계의 전산... But, AI만 하게 되면 불완전성이 남아있어서 컨텐츠 신뢰성의 문제 발생... 이러한 얘기들을 다 해야한다. 만약 구현해달라는 사람이 이걸 구현해달라고 할 때 어느 리스트가 있고, 어디까지 우리가 할 수 있는지를 말해주는 건 중요. 프로젝트 리스트는 고객에게도 있고 개발자에게도 있다. 
리스크 파악에 있어서 비지니스 맨보다 분석가인 우리가 더 자세하게 파악해야 한다. 우리가 처리할 수 있는 위치까지 와야 컴퓨터 밖을 벗어나 우리 사장님이 신경쓰는 고객을 우리가 만날 수 있다. 이게 출발...

E: Essential - 필수적으로 넣어야 하는 것
H: High - 
F: Follow-on - optional

발표할 때 관객들을 보는 게 아니라 적힌 걸 읽는 사람하고, 외워서 얘기하는 것은 전달력이 다르다. 리듬감이 다르다... 발표를 듣는 사람들의 공감을 같이 따라가고 있는지는 모른다. 이미지로 보여줄 거 같으면 삽화가 낫다. 어떤 화면이든 의도를 얘기해줘야한다. 디테일한 요소를 보여주기 전에 숲을 설명해줘야 한다. 왜 이런 걸 할 수 밖에 없는지, 이 기능을 통해 개발자가 뭘 타파하려고 했는지를 설명해줘야 한다. 발표거리가 중요한 게 아니라 이 사람들한테 어떻게 알려줄 것인가가 중요. 자기 이야기를 어떻게 풀어나갈지가 아니라 듣는 사람들에게 어떻게 이해시키고 공감시킬 것인지 이야기해야 한다. 알고 있는 걸 사람들에게 말할 때 듣기가 편하다.
사람들에게 관심과 자극을 주기 위해서는 해보지 않은 걸 시도해볼 필요가 있다. 공부라는 것이 너무 재미에 치우쳐있지 않은가
왜 옛날에 삽화로만 있었던 것들이 재미없는 글들로 바뀌는 가 -> 성장하면서 재미없는 걸 참고 학습할 수 있고, 더 효율성이 높기 때문에... 학습은 마음만 먹으면 단기간에 앉아서 다 할 수 있다.
활용적 측면, 그걸 체화시키는 측면
학습이라는 부분이 주목해야할 부분은, 공부하면서 단어를 외우는 부분이 힘든 게 아니라 힘들게 외웠는데 다시 까먹는 게 싫은 것
=> 영어 단어장의 추구하는 방향은 2가지
1. 학습적으로 어떻게 기억시킬 수 있을까 라는 프로그래밍 2. 어떻게 외운 걸 까먹지 않게 할 수 있을까.
Manners maketh man을 기억하는 이유는 킹스맨이기 때문이 아니라 수많은 매체들로 수없이 반복되었기 때문...

학습이라는 것이 예나 지금이나 뼈를 깎는 노력은 필요하다. 재밌게 배우더라도 결론적으로 얼마나 앉아서 공부하면서 시간을 보내느냐의 문제

옳고 그름은 비즈니스 케이스에서 결정하고, 개발 측면에서는 이걸 어떻게 처리할 것인가를 이야기 해야 한다.
유즈케이스 시나리오는 하나의 유즈케이스를 가지고 풀어나가는 것. 메뉴에 대한 설명x
사용자가 어떠한 행동을 하고 시스템이 어떠한 행동을 하는지 학습을 하는 과정에서 발생할 수 있는 문제점을 기술하는 것이 시나리오
시나리오를 쓰는 이유는 1. 해당 유즈케이스에 대한 이해를 위한 것(이게 맞나) 2. 그 과정속에서 프로그램에서 발생할 수 있는 문제점을 감지하는 목적

테스트를 할 때 반드시 일어나야 한다면 <<include>>

우리 시간이 다가오고 있다 두근두근두근ㄷㄷ구늗군드구느
난 하나도 긴장안돼

특정 시간에 사람들이 모여서 대화를 하는 게 몰입도가 좋다고 생각해서 음성채팅을 하루에 2번만 이벤트를 하게 한 것

[4조]
APPLICATION INTRODUTION -> INTRODUCE TO APPLICATION
[개선점]
젤리를 찾을 때 테스트가 필요, 2번 해서 단어를 못 맞추면 젤리를 놓치도록. Indoor에서 복습, Outdoor에서 복습한 젤리를 획득할 수 있게. 놓쳤을 때의 기회비용을 애들이 경험하게 하고, 
=> Indoor에서 학습하지 않고 Outdoor로 갔을 때 모르는 단어라서 놓치게 되면 Indoor에서 
우리가 학습을 할 때 앉아서 계속 있으면 집중력이 떨어진다.
환경이 시시각각 바뀌고, 계속 움직이게 되면 학습을 위해서 뇌만 사용하는 게 아닌 모든 감각을 사용한다는 점에서 좋다. 집중하지 못하는 아이들이 움직이면서 학습한다는 점에선 좋은 발상. 문제는 각 단어당 컨텐츠 작성비용이 상당할 것. 이것이 가지고 있는 효과성은 매우 좋지만 효율적인가는 생각해볼 문제 -> 우리가 효율성에 집중한 건 x, But, 대부분의 경우에 효율과 효과의 중간 선상에서 결정.... 효율성도 생각하고 교육의 효과성도 생각해야 한다. 중간에서의 trade 문제.
효과도 좋지만 효율성도 분명히 고려해야 한다. 효과와 효율 사이에서 trade 관계를 좀 더 생각해봐야 한다.

효율성만 담보 되어진다면 꼭 초등학생이 아니더라고 가능. 중학생 고등학생 이상까지도 가능할 것이다. 추상적인 부분만 해결될 수 있다면 중고등학생도 가능하다. => 컨텐츠 비용이 떨어지지 않을까

해당 woul의 모션 수행, 해당 jelly 설명 확인 - 용어 선택이 잘못?
넘버링... 모션의 시작시점과 끝 시점 잘 생각해야.
모션 일치 여부 확인 <- 실질적으로 모션을 취해야한다. But, 어떤 식으로 모션을 인삭 할 수 있나.
공상이 되지 않으려면 할 수 있는 것의 정의, 할 수 없는 것의 정의가 확실히 있어야 한다. => 어디까지 얘를 가지고 할 수 있을지 잘 정의 내려야 한다. 
배틀 그라운드 처럼 뭘 하던지 사용자는 아주 심플(키보드와 마우스만 사용) But, 게임 속에서는 탱크를 타던지 총을 쏘던지 등등... 이건 인터페이스로 구현 가능.
휴대폰 입장에서 모션을 인식하는 건 센서이기 때문에 제대로 구별을 할 수 있는 방법을 모색해야 한다. 
진짜 제대로 된 모션을 인식하려면 슈팅 기능이나 전신 슈트가 있어야 한다...?
우리가 만드는 건 메타버스 프로그램이다; 
☆☆☆인터페이스 단을 단순화 시키는 방법 모색하기☆☆☆
모든 단어를 이미지화 할 수 있으면, 그것을 이용해 만들 수 있는 컨텐츠는 무궁무진 하다고 생각
누군가가 만든다면. 모두가 볼 것. But, 그것이 엄청 힘들다. 모든 단어를 이미지화 할 수만 있으면 그냥 책으로 내도 팔린다.
ㅠㅠㅜ개발 30년ㅠㅠㅜ
개발자는 어떻게 개발을 할 것인지 제대로 분석해야한다. (저걸 처리하기 위해서 뭘 해야할까를 확실히 생각해야 엔지니어)
우리는 상상도 할 수 있지만, 구현해야하는 크리에이터기 때문에 뭘 구현할 수 있고, 할 수 없는지 확실히 생각해야 한다.
기술적인 접근은 아쉬웠지만 다 좋았다고 칭찬받았다.

GPS 기반으로 길가로 나가면 경고등??
강사님이라면 했을지도
미래에 대한 불안감을 가지고 있다면
강사님이 관심을 가졌던 기업경영쪽. 원래는 좀 더 공부를 해야했다면 철학, 역사, 인문학... 학과에 대한 타이틀만 봐도 가장 소프트한 공학이 뭘까?=> 산업공학에 들어가신... 
풀이 과정은 맞는데 답을 다 틀리시는... 졸업을 하고 첫 면접을 보고 회사생활을 하면서 it쪽으로 도전을 해볼까라는 생각. But, 결혼을 앞두고 계셨고, 대한민국이 힘들었던 상황. 회사를 나오고 했던 생각 '내가 40대가 됐을 때 10년만 젊었으면 뭘 했을텐데...'를 생각해보니까 지금이 그 때다라는 생각... 백수인채로 결혼을 하게 됐고, 직장이 없어서 친구들이 서울에서 결혼 1달에서 2달을 앞두고 직장을 잡아서 직장동료들이 결혼식에 오긴 했... 
미래는 어떻게 될지 모르는 거고 현재만 생각한다면 당연히 미래는 불안하지만 그냥 뭐든지 하면 다 길이 생긴다. 그러니까 너무 조급하게 하지말고, 너무 현실적으로 걱정하지 말기
당장 급하다고 의사결정할 필요 없다. 어차피 당장 결정해도 다시 결정해야할 일이 찾아온다. 회사에서 일어나는 갈등이나 의도치 않은 상황 등등... 그래도 강사님은 그 다음의 것이 궁금해서 나온 거라 운이 좋을 편일지도 
지금도 강사님이 돈 다 털어가면서 일을 하고 있는데 그냥 일을 버티면서 해보고 있는 것
살다보면 돈보다 더 가치 있는 것이 많다. 뭐든지 하다보면 내성이라는 게 생긴다. 잘못된 의사결정도 내성이 생긴다. 진짜 후회는 안했을 때의 후회... 안해봤기 때문에 상상만 하면서 살아야하기 때문... 어느 순간 아 이거다 라는 생각이 들면 밀고 나가 보기
내가 돈을 하나도 못 벌었을 때, 내가 아사해서 죽겠냐. 굶겠냐라고 생각하면 뭐든지 다 할 수 있다.
삶이란 게 돈을 많이 벌어도 어차피 좀 더 좋은 차, 옷을 살 수 있다는 정도의 좋음일 뿐... 구매할 때만 좋다. 
현실에 연연하지 말고 진짜 하고 싶은 거 한 번 해보기... 살아서 기억에 남는 것과 안남는 것... 자기를 위해서 살아온 모든 것들(부, 명예, 직장, 공부...)은 기억이 안난다... But, 자기가 남을 위해 뭔가를 한 건 기억이 난다고...
월급받고 안정적인 직장이 다가 아니다. 강사님이 공무원을 쳐다도 안보는 이유는, 안정적일 수 있어도 계속 반복적인 일을 하면서 사는 건 참을 수 없기 때문... 사자는 사냥하다 죽는다. 우리가 죽더라도 움직이고 보존하고 죽는 게 삶을 사는 것이지... 안정적이기만 한 건 의미가 없을수도... 계속 도전하면서 살아라.

계속 기억되는 단어.
1. 대부분 사람들이 잘아는 단어 2. 일상에서 자주 듣거나 사용 3. 쉽게 이미지화
학습 이력과 언어 습관에서 나온다. 모르는 단어를 외울 때 대부분 단어와 뜻을 문자로 읽고 기억하려고 한다. 문자 방식은 기억은 빠르지만 잊어버리기 쉽고, 기억해내기 어렵다. 이미지화 해서 외운 단어는 기억하기 어렵지만 장기적으로 기억된다. 단어의 이미지를 기억하는 훈련을 한다면, 각각의 상황에 지속적으로 학습한다면, 체화되어 구구단처럼 사용할 수 있다. 이것이 이미지가 갖는 힘.

앉아서 전통적으로 하는 학습방식에 새로운 것은 없는지 찾았다. But, 현재 사람들은 계속 기존의 방식을 고수 -> 효율성 때문, But, 효율성은 높아도 효과성은 떨어진다. 효율성과 효과성의 문제를 해결할 수 있으면 큰 돈을 벌 수 있다.
공부하면 뭐든지 알아낼 수 있다. IT를 배우면 뭐든지 요구사항이 발생, IT에서도 스터디 발생. 이런 API 있다. BUT, 찾으려면 질문을 잘해야한다. 꾸준히 자기한테 질문하기. 

회의에서 물어도 대답도 없고, 가만히 있고 이런 게 답답... 회의시간에 뭐든지 얘기를 꼭 하는 게 좋다...